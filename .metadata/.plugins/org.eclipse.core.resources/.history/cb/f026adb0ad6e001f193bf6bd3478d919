/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.h
  * @brief          : Header for main.c file.
  *                   This file contains the common defines of the application.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2024 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __MAIN_H
#define __MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "stm32f4xx_hal.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
#include <stdio.h>

enum event {
    ev_none = 0,
    ev_button_push,
    ev_state_timeout
};

typedef enum state {
    s_init,
    s_car_go,
    s_pushed_wait,
    s_cars_stopping,
    s_car_stopped,
    s_go_people,
    s_stop_people,
    s_cars_wait
} State_Type;

// Global variables for state and events
State_Type current_state = s_init;
enum event current_event = ev_none;

// Switch case state machine
void state_machine(void) {
    switch (current_state) {
        case s_init:
        	HAL_GPIO_WritePin(C_RED_GPIO_PORT, C_RED_PIN, GPIO_PIN_SET);
            break;
        case s_car_go:

            break;
        case s_pushed_wait:

            break;
        case s_cars_stopping:

            break;
        case s_car_stopped:

            break;
        case s_go_people:

            break;
        case s_stop_people:

            break;
        case s_cars_wait:

            break;
        default:
            printf("State: UNKNOWN\n");
            break;
    }
}

int main() {
    while (1) {
        state_machine();

        // Here you can change the event to test state transitions
        current_event = ev_button_push;
    }
    return 0;
}



/* USER CODE END Includes */

/* Exported types ------------------------------------------------------------*/
/* USER CODE BEGIN ET */

/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */

/* USER CODE END EM */

/* Exported functions prototypes ---------------------------------------------*/
void Error_Handler(void);

/* USER CODE BEGIN EFP */

/* USER CODE END EFP */

/* Private defines -----------------------------------------------------------*/
#define B1_Pin GPIO_PIN_13
#define B1_GPIO_Port GPIOC
#define C_YELLOW_Pin GPIO_PIN_1
#define C_YELLOW_GPIO_Port GPIOA
#define USART_TX_Pin GPIO_PIN_2
#define USART_TX_GPIO_Port GPIOA
#define USART_RX_Pin GPIO_PIN_3
#define USART_RX_GPIO_Port GPIOA
#define C_GREEN_Pin GPIO_PIN_4
#define C_GREEN_GPIO_Port GPIOA
#define LD2_Pin GPIO_PIN_5
#define LD2_GPIO_Port GPIOA
#define P_GREEN_Pin GPIO_PIN_10
#define P_GREEN_GPIO_Port GPIOA
#define P_RED_Pin GPIO_PIN_11
#define P_RED_GPIO_Port GPIOA
#define C_RED_Pin GPIO_PIN_12
#define C_RED_GPIO_Port GPIOA
#define TMS_Pin GPIO_PIN_13
#define TMS_GPIO_Port GPIOA
#define TCK_Pin GPIO_PIN_14
#define TCK_GPIO_Port GPIOA
#define SWO_Pin GPIO_PIN_3
#define SWO_GPIO_Port GPIOB

/* USER CODE BEGIN Private defines */

/* USER CODE END Private defines */

#ifdef __cplusplus
}
#endif

#endif /* __MAIN_H */
